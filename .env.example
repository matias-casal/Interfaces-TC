# ==============================================================================
# MESSAGING APP - ENVIRONMENT VARIABLES
# ==============================================================================
# Copy this file to .env and update with your values
# NEVER commit .env file to version control
# ==============================================================================

# Node Environment (development | production | test)
NODE_ENV=development

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================
POSTGRES_USER=messaging_user
POSTGRES_PASSWORD=CHANGE_THIS_STRONG_PASSWORD_IN_PRODUCTION
POSTGRES_DB=messaging_db
# For Docker containers, use service name (postgres) instead of localhost
# Note: Replace the values below with the actual credentials
DATABASE_URL=postgresql://messaging_user:CHANGE_THIS_STRONG_PASSWORD_IN_PRODUCTION@postgres:5432/messaging_db
# For local development outside Docker
DATABASE_URL_LOCAL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB}

# ==============================================================================
# REDIS CONFIGURATION
# ==============================================================================
# For Docker containers
REDIS_URL=redis://redis:6379
# For local development
REDIS_URL_LOCAL=redis://localhost:6379
REDIS_PASSWORD=

# ==============================================================================
# SECURITY & JWT CONFIGURATION
# ==============================================================================
# IMPORTANT: Generate a secure random secret for production using:
# node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=CHANGE_THIS_USE_SECURE_RANDOM_SECRET_IN_PRODUCTION
JWT_EXPIRE_TIME=7d
JWT_REFRESH_EXPIRE_TIME=30d

# Shared token for service-to-service authentication (rotate regularly!)
INTERNAL_SERVICE_TOKEN=CHANGE_THIS_INTERNAL_SERVICE_TOKEN

# Bcrypt salt rounds (10-12 recommended for production)
BCRYPT_SALT_ROUNDS=10

# ==============================================================================
# SERVICE PORTS
# ==============================================================================
AUTH_SERVICE_PORT=3001
USER_SERVICE_PORT=3002
MESSAGING_SERVICE_PORT=3003
REALTIME_SERVICE_PORT=3004

# ==============================================================================
# SERVICE URLs (Internal Docker Network)
# ==============================================================================
AUTH_SERVICE_URL=http://auth-service:3001
USER_SERVICE_URL=http://user-service:3002
MESSAGING_SERVICE_URL=http://messaging-service:3003
REALTIME_SERVICE_URL=http://real-time-service:3004

# ==============================================================================
# EXTERNAL SERVICE ACCESS (All services accessed via Nginx Gateway)
# ==============================================================================
# Services are NOT exposed directly for security. Use Nginx Gateway on port 80:
# - Auth: http://localhost/auth/*
# - Users: http://localhost/users/*
# - Messages: http://localhost/messages/*
# - Real-time: http://localhost/socket.io/*
NGINX_GATEWAY_URL=http://localhost

# ==============================================================================
# RATE LIMITING CONFIGURATION
# ==============================================================================
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_AUTH_WINDOW_MS=900000
RATE_LIMIT_AUTH_MAX_REQUESTS=5
RATE_LIMIT_LOGIN_MAX_ATTEMPTS=3
RATE_LIMIT_MESSAGE_MAX_PER_MIN=30

# ==============================================================================
# LOGGING CONFIGURATION
# ==============================================================================
LOG_LEVEL=info
LOG_DIR=./logs
LOG_MAX_SIZE=20m
LOG_MAX_FILES=14d
LOG_DATE_PATTERN=YYYY-MM-DD

# ==============================================================================
# CORS CONFIGURATION
# ==============================================================================
CORS_ORIGIN=http://localhost:3000,http://localhost:5173
CORS_CREDENTIALS=true

# ==============================================================================
# ENCRYPTION CONFIGURATION
# ==============================================================================
RSA_KEY_SIZE=2048
ENCRYPTION_ALGORITHM=RSA-OAEP

# ==============================================================================
# MONITORING & HEALTH CHECKS
# ==============================================================================
HEALTH_CHECK_INTERVAL=30000
HEALTH_CHECK_TIMEOUT=3000
HEALTH_CHECK_START_PERIOD=60000
